---
# Source: quickwit/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-quickwit
  labels:
    helm.sh/chart: quickwit-0.7.15
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: quickwit/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-quickwit-searcher
  labels:
    helm.sh/chart: quickwit-0.7.15
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 7280
      targetPort: rest
      protocol: TCP
      name: rest
    - port: 7281
      targetPort: grpc
      name: grpc
  selector:
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: searcher
---
# Source: quickwit/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-quickwit-headless
  labels:
    helm.sh/chart: quickwit-0.7.15
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    # Needed by istio with mTLS mode set to STRICT.
    # The port names must starts with "tcp-" or "udp-" to work...
    # See https://istio.io/latest/docs/ops/common-problems/network-issues/#503-error-while-accessing-headless-services
    - name: udp
      port: 7282
      protocol: UDP
    - name: tcp-http
      port: 7280
      protocol: TCP
    - name: tcp-grpc
      port: 7281
      protocol: TCP
  selector:
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
---
# Source: quickwit/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-quickwit-indexer
  labels:
    helm.sh/chart: quickwit-0.7.15
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 7280
      targetPort: rest
      protocol: TCP
      name: rest
    - port: 7281
      targetPort: grpc
      name: grpc
  selector:
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: indexer
---
# Source: quickwit/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-quickwit-metastore
  labels:
    helm.sh/chart: quickwit-0.7.15
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 7280
      targetPort: rest
      protocol: TCP
      name: rest
    - port: 7281
      targetPort: grpc
      name: grpc
  selector:
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: metastore
---
# Source: quickwit/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-quickwit-control-plane
  labels:
    helm.sh/chart: quickwit-0.7.15
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 7280
      targetPort: rest
      protocol: TCP
      name: rest
    - port: 7281
      targetPort: grpc
      name: grpc
  selector:
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: control-plane
---
# Source: quickwit/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-quickwit-janitor
  labels:
    helm.sh/chart: quickwit-0.7.15
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 7280
      targetPort: rest
      protocol: TCP
      name: rest
    - port: 7281
      targetPort: grpc
      name: grpc
  selector:
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: janitor
---
# Source: quickwit/templates/control-plane-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-quickwit-control-plane
  labels:
    helm.sh/chart: quickwit-0.7.15
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quickwit
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: control-plane
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: 761f1e00e745751ce573afd2d6f88ad8717393e88dd168e2d9c8094c66d27808
      labels:
        
        app.kubernetes.io/name: quickwit
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: control-plane
    spec:
      serviceAccountName: release-name-quickwit
      securityContext:
        fsGroup: 1005
      containers:
        - name: quickwit
          securityContext:
            runAsNonRoot: true
            runAsUser: 1005
          image: "quickwit/quickwit:v0.8.2"
          imagePullPolicy: IfNotPresent
          args: ["run", "--service", "control_plane"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: QW_CONFIG
              value: /quickwit/node.yaml
            - name: QW_CLUSTER_ID
              value: default-release-name-quickwit
            - name: QW_NODE_ID
              value: "$(POD_NAME)"
            - name: QW_PEER_SEEDS
              value: release-name-quickwit-headless
            - name: QW_ADVERTISE_ADDRESS
              value: "$(POD_IP)"
            - name: QW_CLUSTER_ENDPOINT
              value: http://release-name-quickwit-metastore.default.svc.cluster.local:7280
            - name: "QW_METASTORE_URI"
              value: "s3://quickwit-him-test/quickwit-indexes"
          ports:
            - name: rest
              containerPort: 7280
              protocol: TCP
            - name: grpc
              containerPort: 7281
              protocol: TCP
            - name: discovery
              containerPort: 7282
              protocol: UDP
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /health/livez
              port: rest
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health/livez
              port: rest
          readinessProbe:
            httpGet:
              path: /health/readyz
              port: rest
          volumeMounts:
            - name: config
              mountPath: /quickwit/node.yaml
              subPath: node.yaml
            - name: data
              mountPath: /quickwit/qwdata
          resources:
              {}
      volumes:
        - name: config
          configMap:
            name: release-name-quickwit
            items:
              - key: node.yaml
                path: node.yaml
        - name: data
          emptyDir: {}
      tolerations:
        []
---
# Source: quickwit/templates/janitor-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-quickwit-janitor
  labels:
    helm.sh/chart: quickwit-0.7.15
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quickwit
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: janitor
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: 761f1e00e745751ce573afd2d6f88ad8717393e88dd168e2d9c8094c66d27808
      labels:
        
        app.kubernetes.io/name: quickwit
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: janitor
    spec:
      serviceAccountName: release-name-quickwit
      securityContext:
        fsGroup: 1005
      containers:
        - name: quickwit
          securityContext:
            runAsNonRoot: true
            runAsUser: 1005
          image: "quickwit/quickwit:v0.8.2"
          imagePullPolicy: IfNotPresent
          args: ["run", "--service", "janitor"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: QW_CONFIG
              value: /quickwit/node.yaml
            - name: QW_CLUSTER_ID
              value: default-release-name-quickwit
            - name: QW_NODE_ID
              value: "$(POD_NAME)"
            - name: QW_PEER_SEEDS
              value: release-name-quickwit-headless
            - name: QW_ADVERTISE_ADDRESS
              value: "$(POD_IP)"
            - name: QW_CLUSTER_ENDPOINT
              value: http://release-name-quickwit-metastore.default.svc.cluster.local:7280
            - name: "QW_METASTORE_URI"
              value: "s3://quickwit-him-test/quickwit-indexes"
          ports:
            - name: rest
              containerPort: 7280
              protocol: TCP
            - name: grpc
              containerPort: 7281
              protocol: TCP
            - name: discovery
              containerPort: 7282
              protocol: UDP
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /health/livez
              port: rest
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health/livez
              port: rest
          readinessProbe:
            httpGet:
              path: /health/readyz
              port: rest
          volumeMounts:
            - name: config
              mountPath: /quickwit/node.yaml
              subPath: node.yaml
            - name: data
              mountPath: /quickwit/qwdata
          resources:
              {}
      volumes:
        - name: config
          configMap:
            name: release-name-quickwit
            items:
              - key: node.yaml
                path: node.yaml
        - name: data
          emptyDir: {}
      tolerations:
        []
---
# Source: quickwit/templates/metastore-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-quickwit-metastore
  labels:
    helm.sh/chart: quickwit-0.7.15
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quickwit
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: metastore
  strategy:
    null
  template:
    metadata:
      annotations:
        checksum/config: 761f1e00e745751ce573afd2d6f88ad8717393e88dd168e2d9c8094c66d27808
      labels:
        
        app.kubernetes.io/name: quickwit
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: metastore
    spec:
      serviceAccountName: release-name-quickwit
      securityContext:
        fsGroup: 1005
      containers:
        - name: quickwit
          securityContext:
            runAsNonRoot: true
            runAsUser: 1005
          image: "quickwit/quickwit:v0.8.2"
          imagePullPolicy: IfNotPresent
          args: ["run", "--service", "metastore"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: QW_CONFIG
              value: /quickwit/node.yaml
            - name: QW_CLUSTER_ID
              value: default-release-name-quickwit
            - name: QW_NODE_ID
              value: "$(POD_NAME)"
            - name: QW_PEER_SEEDS
              value: release-name-quickwit-headless
            - name: QW_ADVERTISE_ADDRESS
              value: "$(POD_IP)"
            - name: QW_CLUSTER_ENDPOINT
              value: http://release-name-quickwit-metastore.default.svc.cluster.local:7280
            - name: "QW_METASTORE_URI"
              value: "s3://quickwit-him-test/quickwit-indexes"
          ports:
            - name: rest
              containerPort: 7280
              protocol: TCP
            - name: grpc
              containerPort: 7281
              protocol: TCP
            - name: discovery
              containerPort: 7282
              protocol: UDP
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /health/livez
              port: rest
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health/livez
              port: rest
          readinessProbe:
            httpGet:
              path: /health/readyz
              port: rest
          volumeMounts:
            - name: config
              mountPath: /quickwit/node.yaml
              subPath: node.yaml
            - name: data
              mountPath: /quickwit/qwdata
          resources:
              {}
      volumes:
        - name: config
          configMap:
            name: release-name-quickwit
            items:
              - key: node.yaml
                path: node.yaml
        - name: data
          emptyDir: {}
      tolerations:
        []
---
# Source: quickwit/templates/indexer-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-quickwit-indexer
  labels:
    helm.sh/chart: quickwit-0.7.15
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 1
  serviceName: release-name-quickwit-headless
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app.kubernetes.io/name: quickwit
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: indexer
  updateStrategy:
    {}
  template:
    metadata:
      annotations:
        checksum/config: 761f1e00e745751ce573afd2d6f88ad8717393e88dd168e2d9c8094c66d27808
      labels:
        
        app.kubernetes.io/name: quickwit
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: indexer
    spec:
      serviceAccountName: release-name-quickwit
      securityContext:
        fsGroup: 1005
      containers:
        - name: quickwit
          securityContext:
            runAsNonRoot: true
            runAsUser: 1005
          image: "quickwit/quickwit:v0.8.2"
          imagePullPolicy: IfNotPresent
          args: ["run", "--service", "indexer"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: QW_CONFIG
              value: /quickwit/node.yaml
            - name: QW_CLUSTER_ID
              value: default-release-name-quickwit
            - name: QW_NODE_ID
              value: "$(POD_NAME)"
            - name: QW_PEER_SEEDS
              value: release-name-quickwit-headless
            - name: QW_ADVERTISE_ADDRESS
              value: "$(POD_IP)"
            - name: QW_CLUSTER_ENDPOINT
              value: http://release-name-quickwit-metastore.default.svc.cluster.local:7280
            - name: "QW_METASTORE_URI"
              value: "s3://quickwit-him-test/quickwit-indexes"
          ports:
            - name: rest
              containerPort: 7280
              protocol: TCP
            - name: grpc
              containerPort: 7281
              protocol: TCP
            - name: discovery
              containerPort: 7282
              protocol: UDP
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /health/livez
              port: rest
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health/livez
              port: rest
          readinessProbe:
            httpGet:
              path: /health/readyz
              port: rest
          volumeMounts:
            - name: config
              mountPath: /quickwit/node.yaml
              subPath: node.yaml
            - name: data
              mountPath: /quickwit/qwdata
          resources:
            {}
      terminationGracePeriodSeconds: 120
      volumes:
        - name: config
          configMap:
            name: release-name-quickwit
            items:
              - key: node.yaml
                path: node.yaml
        - name: data
          emptyDir: {}
      tolerations:
        []
---
# Source: quickwit/templates/searcher-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-quickwit-searcher
  labels:
    helm.sh/chart: quickwit-0.7.15
    app.kubernetes.io/name: quickwit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 3
  serviceName: release-name-quickwit-headless
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app.kubernetes.io/name: quickwit
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: searcher
  updateStrategy:
    {}
  template:
    metadata:
      annotations:
        checksum/config: 761f1e00e745751ce573afd2d6f88ad8717393e88dd168e2d9c8094c66d27808
      labels:
        
        app.kubernetes.io/name: quickwit
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: searcher
    spec:
      serviceAccountName: release-name-quickwit
      securityContext:
        fsGroup: 1005
      containers:
        - name: quickwit
          securityContext:
            runAsNonRoot: true
            runAsUser: 1005
          image: "quickwit/quickwit:v0.8.2"
          imagePullPolicy: IfNotPresent
          args: ["run", "--service", "searcher"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: QW_CONFIG
              value: /quickwit/node.yaml
            - name: QW_CLUSTER_ID
              value: default-release-name-quickwit
            - name: QW_NODE_ID
              value: "$(POD_NAME)"
            - name: QW_PEER_SEEDS
              value: release-name-quickwit-headless
            - name: QW_ADVERTISE_ADDRESS
              value: "$(POD_IP)"
            - name: QW_CLUSTER_ENDPOINT
              value: http://release-name-quickwit-metastore.default.svc.cluster.local:7280
            - name: "QW_METASTORE_URI"
              value: "s3://quickwit-him-test/quickwit-indexes"
          ports:
            - name: rest
              containerPort: 7280
              protocol: TCP
            - name: grpc
              containerPort: 7281
              protocol: TCP
            - name: discovery
              containerPort: 7282
              protocol: UDP
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /health/livez
              port: rest
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health/livez
              port: rest
          readinessProbe:
            httpGet:
              path: /health/readyz
              port: rest
          volumeMounts:
            - name: config
              mountPath: /quickwit/node.yaml
              subPath: node.yaml
            - name: data
              mountPath: /quickwit/qwdata
          resources:
              {}
      volumes:
        - name: config
          configMap:
            name: release-name-quickwit
            items:
              - key: node.yaml
                path: node.yaml
        - name: data
          emptyDir: {}
      tolerations:
        []
